Key:
 * done
 ! in progress

* Basic skeleton SDL2/OpenGL
* Console system
*  Scripting from files (autoexec.cfg)
*  Basic rendering
*  CVars
*   Send events when CVars are changed
*  Switch command usage info into a string table (instead of  in cmd_* functions)
*   Dynamically add commands
*   Move commands into seperate C module
*   Add predefined commands using an init function - same as dynamic commands
*  Tab auto complete
* App flow (FSM)
*  Implement table of states with callbacks
*   Dynamically loaded
*  Handle change request event
*  Setup/Teardown on state change
*  Implement time stepping
*  Add debug command
* Implement debug overlay
* VFS
*  Mount .pak files via PhysFS
*  Browse using ls/cd/cwd/cat etc in console
  Sound system
   Seperate thread and messages
   Music track start/stop
   Sound effects
    Spatialised sound
  Rendering lib
   Implement basic operations
!   Texture loading
*    Load from VFS
     Switch to cache layer
     Load from SDL surface
    2D
!    Text
*     Basic (for debug info)
      TTF
     Textured quad
    3D
     Camera/view transform
     Render quad
     Pre-load geometry
       Display lists (later VBOs)
       Allow transforms + nesting
! Cache layer
!  Add commands to console to query cache contexts
!  Cache contexts - create at start of level (or whatever else), then destroy all cached objects together
   VFS cache - cache whole files
   Font cache
   Sound cache
   OpenGL texture cache - load OpenGL textures here
   Arbitary data cache - pass a pointer and a data size, whole thing copied into cache and stored
  Splash / logo
  Loading screen
  Def format loader
  Level renderer
   Load tiledefs and build display lists for each tiledef
   Build display list for whole level geometery
  Test level
  Menu system
   Define via .def file
   TTF font
   Menu items can trigger console commands
   Options menu
    Items can specify CVar to change
    Volume control style
     Range of values specified in .def file
    Boolean/checkbox style
    Text input
  Lua binding
  Entity behaviours

